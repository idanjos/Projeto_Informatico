<!DOCTYPE html>
<html lang="en">

<head>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">

 <link rel="stylesheet" href="/css/bootstrap.css">
  <link rel="stylesheet" href="/js/rickshaw/rickshaw.css">
  <script src="/js/jquery.js"></script>
  <script src="/js/popper.js"></script>
  <script src="/js/bootstrap.js"></script>
  <title>VIRHUS API</title>

  <!-- Custom fonts for this template-->
  <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">

  <!-- Page level plugin CSS-->
  <link href="vendor/datatables/dataTables.bootstrap4.css" rel="stylesheet">

  <!-- Custom styles for this template-->
  <link href="css/sb-admin.css" rel="stylesheet">
<style>
   pre.code {
    background-color: #f6f8fa;
    border-radius: 3px;
    font-size: 85%;
    line-height: 1.45;
    overflow: auto;
    padding: 16px;
}
.fa-circle{
  font-size: 7px;
}

</style>
</head>

<body id="page-top">

  <nav class="navbar navbar-expand navbar-dark bg-dark static-top">

    <a class="navbar-brand mr-1" href="/">VIRHUS</a>

    <button class="btn btn-link btn-sm text-white order-1 order-sm-0" id="sidebarToggle" href="#">
      <i class="fas fa-bars"></i>
    </button>

    <!-- Navbar Search -->
  

<div class="modal fade bd-example-modal-lg" id="myModal"  tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      ...
    </div>
  </div>
</div>

    <!-- Navbar -->
    

  </nav>

  <div id="wrapper">

    <!-- Sidebar -->
    <ul class="sidebar navbar-nav">
      <li class="nav-item">
        <a class="nav-link" href="/documentation">
          <i class="fas fa-fw fa-tachometer-alt"></i>
          <span>Virhus JS</span>
        </a>
      </li>
     
      <li class="nav-item">
        <a class="nav-link" href="/messaging">
          <i class="fas fa-fw fa-chart-area"></i>
          <span>Messaging</span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/api">
          <i class="fas fa-fw fa-table"></i>
          <span>Test it yourself!</span></a>
      </li>
    </ul>

    <div id="content-wrapper">

      <div class="container-fluid">

        <!-- Breadcrumbs-->
  

        <!-- Page Content -->
        <h1>Messaging API</h1>
        <hr>
        <p> For our messaging fanatics, we have have included RabbitMQ to support messaging dependent applications. At the moment we only return recordings and metadata of Virtual Humans</p><br>
        <h1>Requirements</h1>
        <div class ="code">
          <a href="https://www.npmjs.com/package/amqplib">amqplib JS</a><br>
          <a href="https://pypi.org/project/pika/0.11.0/">pika Python</a><br>
        
        
        </div>
        <br>
        <h1>Node JS</h1>
        <div>
        <pre class="code"> npm i amqplib </pre>
      </div>

      <br>
      <h2>AmqpLib Client example</h2>
      <div>
        A very clear and simple understanding of how to operate with our RabbitMQ.
        <pre class="code">
    var amqp = require('amqplib/callback_api');
    //Location of our server!
    amqp.connect('amqp://192.168.160.56', function(error0, connection) {
        if (error0) {
            throw error0; //Just incase something happens
        }
        connection.createChannel(function(error1, channel) {
            if (error1) {
               throw error1;
            }
            //There's a queue called main, here is where you ask for a certain VirtualHuman/Recording
            var queue = 'main';
  
            //We highly suggest you to follow this format, <user>-<VirtualHuman/Recording>
            var msg = '<user>-<recording>.dat';

            channel.assertQueue(queue, {
                durable: false
            });
  
            //This creates the queue
            channel.assertQueue(msg ,{durable: false},function(err,queue){
               console.log(queue);
            });
  
            //Here is were it will consume the follow message
            channel.consume(msg, function(msg) {
                console.log(msg.content.toString());
            });
  
            //Just to make sure the queue exists before asking a certain file!
            setTimeout(function(){
              channel.sendToQueue(queue, Buffer.from(msg));
              //console.log(" [x] Sent %s", msg);
            },1000);  
        });
  
    });
        </pre>
      </div>


       <br>
        <h1>Python</h1>
        <div>
        <pre class="code"> pip install pika </pre>
      </div>

      <br>
      <h2>Pika Client example</h2>
      <div>
        A very clear and simple understanding of how to operate with our RabbitMQ.
        <pre class="code">
    #!/usr/bin/env python
    import pika

    #Creating connection to our server!
    connection = pika.BlockingConnection(
        pika.ConnectionParameters(host='192.168.160.56'))
    channel = connection.channel()

    #There's a queue called main, here is where you ask for a certain VirtualHuman/Recording
    queue = 'main'

    #We highly suggest you to follow this format, <user>-<VirtualHuman/Recording>
    msg = '1-Bob'

    #This declares main queue
    channel.queue_declare(queue=queue)

    #Telling the server what we want and where it should send it
    channel.basic_publish(exchange='', routing_key=queue,body=msg)

    #This creates the queue where the main server will publish
    channel.queue_declare(queue=msg)


    def callback(ch, method, properties, body):
      #Output of request
        print(" [x] Received %s" % body.decode("utf-8"))

    #Here is where the message is consume and goes to the callback
    channel.basic_consume(
        queue=msg, on_message_callback=callback, auto_ack=True)

    print(' [*] Waiting for messages. To exit press CTRL+C')

    #Tells channel that its ready to consume
    channel.start_consuming()
        </pre>
      </div>





      </div>
      <!-- /.container-fluid -->

      <!-- Sticky Footer -->
      <footer class="sticky-footer">
        <div class="container my-auto">
          <div class="copyright text-center my-auto">
            <span>Copyright © Your Website 2019</span>
          </div>
        </div>
      </footer>

    </div>
    <!-- /.content-wrapper -->

  </div>
  <!-- /#wrapper -->

  <!-- Scroll to Top Button-->
  <a class="scroll-to-top rounded" href="#page-top">
    <i class="fas fa-angle-up"></i>
  </a>

  <!-- Logout Modal-->
  <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
          <button class="close" type="button" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
          </button>
        </div>
        <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
        <div class="modal-footer">
          <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
          <a class="btn btn-primary" href="login.html">Logout</a>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap core JavaScript-->
  <script src="vendor/jquery/jquery.min.js"></script>
  <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

  <!-- Core plugin JavaScript-->
  <script src="vendor/jquery-easing/jquery.easing.min.js"></script>

  <!-- Custom scripts for all pages-->
  <script src="js/sb-admin.min.js"></script>

</body>

</html>
